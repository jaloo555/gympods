{"version":3,"file":"static/webpack/static/development/pages/index.js.1824c0637907edf6f2b2.hot-update.js","sources":["webpack:///./components/Index/ProductList.js"],"sourcesContent":["import gql from \"graphql-tag\"\nimport Link from \"next/link\"\nimport {graphql} from \"react-apollo\"\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardColumns,\n  CardSubtitle,\n  CardText,\n  CardTitle,\n  Col,\n  Row\n} from \"reactstrap\"\n\nconst ProductList = (\n  { data: { loading, error, supplements }, search },req\n  ) => {\n    if (error) return \"Error loading supplements\"\n    if (supplements && supplements.length) {\n      //searchQuery\n      const searchQuery = supplements.filter(query =>\n        query.name.toLowerCase().includes(search)\n      );\n      if (searchQuery.length != 0) {\n        return (\n        <div>\n          <div className=\"h-100\">\n            {searchQuery.map(res => (\n              <Card\n                style={{ width: \"30%\", margin: \"0 10px\" }}\n                body\n                className=\"h-100\"\n                key={res._id}\n              >\n                <CardImg\n                  top={true}\n                  style={{ height: 400 }}\n                  src={`http://localhost:1337${res.image.url}`}\n                />\n                <CardBody>\n                  <CardTitle>{res.name}</CardTitle>\n                  <CardText>{res.description}</CardText>\n                </CardBody>\n                <div className=\"card-footer\">\n                  <Link\n                    as={`/supplements/${res._id}`}\n                    href={`/supplements?id=${res._id}`}\n                  >\n                    <a className=\"btn btn-primary\">View</a>\n                  </Link>\n                </div>\n              </Card>\n            ))}\n          </div>\n          <style jsx>{`\n\n             .card-columns {\n              column-count: 3;\n            }\n          `}\n          </style>\n        </div>\n      )\n    } else {\n      return <h1>No products found</h1>\n    }\n  }\n  return <h1>Loading...</h1>\n}\n\nconst query = gql`\n  {\n    supplements {\n      _id\n      name\n      description\n      image {\n        url\n      }\n    }\n  }\n`\n\nexport default graphql(query, {\n  props: ({data})=> ({\n    data\n  })\n})(ProductList)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAWA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArBA;AAFA;AAAA;AAAA;AAAA;AAsCA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AADA;;;;A","sourceRoot":""}