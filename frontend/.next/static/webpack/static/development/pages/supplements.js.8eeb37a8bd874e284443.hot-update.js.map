{"version":3,"file":"static/webpack/static/development/pages/supplements.js.8eeb37a8bd874e284443.hot-update.js","sources":["webpack:///./components/Product/Listing.js"],"sourcesContent":["import gql from 'graphql-tag'\nimport {graphql, Query} from 'react-apollo'\nimport {compose} from 'recompose'\nimport {withRouter} from 'next/router'\nimport {Container} from 'reactstrap'\n\nconst Listing = ({id, data}) => {\n  return (\n    <Query query={GET_LISTING} variables={{id}}>\n      {({loading, error, data}) => {\n        if (loading) return <h1>Loading...</h1>\n        if (error) return <h1>Error loading supplements.</h1>\n        const supplement = data.supplement\n        return (\n          <Container fluid className=\"mainContainer\">\n             <h1>{supplement.name}</h1>\n             {supplement.sizes.map(res=>(\n              <div key={supplement.id}>\n                <h1>{res.servings}: {res.price}</h1>\n              </div>\n            ))}\n            <style jsx >{`\n              .mainContainer {\n                padding-top: 65px;\n                background-color: blue;\n              }\n            `}</style>\n          </Container>\n        )\n      }}\n    </Query>\n  )\n}\n\n// class Listing extends React.Component {\n//   constructor(props) {\n//     super(props)\n//   }\n//   render() {\n//     console.log('Attempting to load')\n//     const {\n//       data: { loading, error, supplement },\n//       router,\n//       context,\n//       isAuthenticated\n//     } = this.props\n//     if (error) return \"Error loading products\"\n//     if (supplement) {\n//       return (\n//         <div>\n//           <Container fluid>\n//             <h1>{supplement.name}</h1>\n//             {supplement.sizes.map(res=>(\n//               <h1>{res.servings}: {res.price}</h1>\n//             ))}\n//           </Container>\n//           <style jsx global>{`\n//             html,body {\n//               margin-top: 65px;\n//             }\n//           `}\n//           </style>\n//         </div>\n//       )\n//     } return <h1>Loading ...</h1>\n//   }\n// }\n\nconst GET_LISTING = gql`\n  query supplement($id: ID!){\n    supplement(id: $id){\n      name\n      _id\n      description\n      image{\n        url\n      }\n      sizes {\n        price\n        servings\n      }\n    }\n  }\n`\n\nexport default graphql(GET_LISTING, {\n  options: ({id}) => ({\n    variables: {\n      id: id\n    }\n  }),\n  props: ({data}) => ({\n    data\n  })\n})(Listing)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAFA;AAAA;AAAA;AAAA;AAeA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAiBA;AACA;AAAA;AAAA;AACA;AACA;AADA;AADA;AAAA;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AANA;;;;A","sourceRoot":""}