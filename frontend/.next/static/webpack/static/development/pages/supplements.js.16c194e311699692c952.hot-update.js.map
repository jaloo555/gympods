{"version":3,"file":"static/webpack/static/development/pages/supplements.js.16c194e311699692c952.hot-update.js","sources":["webpack:///./components/Product/Listing.js"],"sourcesContent":["import gql from 'graphql-tag'\nimport {graphql, Query} from 'react-apollo'\nimport {Container} from 'reactstrap'\nimport ProductView from './ProductView'\n\nconst Listing = ({id, data}) => {\n  return (\n    <Query query={GET_LISTING} variables={{id}}>\n      {({loading, error, data}) => {\n        if (loading) return <h1>Loading...</h1>\n        if (error) return <h1>Error loading supplements.</h1>\n        const supplement = data.supplement\n        return (\n          <Container fluid className=\"mainContainer\">\n            <h1>{supplement.name}</h1>\n            <ProductView/>\n            {supplement.sizes.map(res=>(\n            <div key={supplement.id}>\n              <h1>{res.servings}: {res.price}</h1>\n            </div>\n            ))}\n            <style jsx >{`\n              .mainContainer {\n                padding-top: 65px;\n                background-color: blue;\n              }\n            `}</style>\n          </Container>\n        )\n      }}\n    </Query>\n  )\n}\n\nconst GET_LISTING = gql`\n  query supplement($id: ID!){\n    supplement(id: $id){\n      name\n      _id\n      description\n      image{\n        url\n      }\n      sizes {\n        price\n        servings\n      }\n    }\n  }\n`\n\nexport default graphql(GET_LISTING, {\n  options: ({id}) => ({\n    variables: {\n      id: id\n    }\n  }),\n  props: ({data}) => ({\n    data\n  })\n})(Listing)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAHA;AAAA;AAAA;AAAA;AAgBA;AAGA;AACA;AACA;AAiBA;AACA;AAAA;AAAA;AACA;AACA;AADA;AADA;AAAA;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AANA;;;;A","sourceRoot":""}