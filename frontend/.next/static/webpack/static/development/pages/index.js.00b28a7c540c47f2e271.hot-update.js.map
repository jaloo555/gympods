{"version":3,"file":"static/webpack/static/development/pages/index.js.00b28a7c540c47f2e271.hot-update.js","sources":["webpack:///./components/Index/ProductList.js"],"sourcesContent":["import gql from \"graphql-tag\"\nimport Link from \"next/link\"\nimport {graphql} from \"react-apollo\"\nimport ProductCard from \"./ProductCard\"\nimport {\n  Container,\n  Col,\n  Row\n} from \"reactstrap\"\n\nconst ProductList = (\n  { data: { loading, error, supplements }, search },req\n  ) => {\n    if (error) return \"Error loading supplements\"\n    if (supplements && supplements.length) {\n      //searchQuery\n      const searchQuery = supplements.filter(query =>\n        query.name.toLowerCase().includes(search)\n      );\n      if (searchQuery.length != 0) {\n        let productCards = searchQuery.map(res=>(\n          <Col sm=\"4\">\n            <ProductCard key={res._id} res={res}/>\n          </Col>\n        ))\n        return (\n        <div className=\"main\" id=\"productList\">\n          <h1 className=\"title\">Our Products</h1>\n          <Container fluid>\n            <Row>\n              {productCards}\n            </Row>\n          </Container>\n          <style jsx>{`\n            .main {\n              font-family: 'Bai Jamjuree', sans-serif;\n              margin: 40px 20px 20px 20px;\n            }\n            .title {\n              text-align: center;\n              margin: 20px;\n            }\n            .cards {\n              display: flex;\n            }\n          `}\n          </style>\n        </div>\n      )\n    } else {\n      return <h1>No products found</h1>\n    }\n  }\n  return <h1>Loading...</h1>\n}\n\nconst query = gql`\n  {\n    supplements {\n      _id\n      name\n      description\n      image {\n        url\n      }\n    }\n  }\n`\n\nexport default graphql(query, {\n  props: ({data})=> ({\n    data\n  })\n})(ProductList)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAuBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AADA;;;;A","sourceRoot":""}